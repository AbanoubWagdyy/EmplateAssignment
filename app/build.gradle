apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.emplate"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    androidExtensions {
        experimental = true
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField("String", "BASE_URL", "\"https://emplate.dev/v9/\"")
            buildConfigField("String", "POST_INCLUDE_QUERY", "\"postfields,postperiods,thumbnail\"")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    testImplementation 'junit:junit:4.12'

    // Espresso
    def androidx_test_espresso = "3.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_test_espresso"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_test_espresso"

    def fragment_version = "1.1.0"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Mockito
    def mockito_core = "2.25.0"
    implementation "org.mockito:mockito-core:$mockito_core"

    def mockito_android = "2.25.0"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android"

    // androidx.test
    def androidx_test = "1.1.0"
    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:rules:$androidx_test"
    androidTestImplementation "androidx.test:core:$androidx_test"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test"

    //Recycler View
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Retrofit
    def retrofitVersion = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // RxAndroid
    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"


    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    //OkHttp3
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'

    // ViewModel and LiveData
    def lifecycle_version = '2.2.0-rc02'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Dagger
    def dagger_version = "2.22"
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "javax.annotation:jsr250-api:1.0"

    // Dagger Android
    api "com.google.dagger:dagger-android:$dagger_version"
    api "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"
    // Retrofit call adapter

    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    //Glide
    def glide_version = "4.10.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation "org.robolectric:robolectric:4.0.2"
}
